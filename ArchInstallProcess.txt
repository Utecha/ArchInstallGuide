##### Arch Install Process #####

1 - ping (website)
2 - cat /sys/firmware/efi/fw_platform_size
3 - lsblk
4 - fdisk /dev/[drivename] (for BIOS), gdisk /dev/[drivename] (for UEFI)
5 - Enter x, Enter z, y for yes twice
6 - cfdisk /dev/[drivename] (for BIOS), cgdisk /dev/[drivename] (for UEFI)
7 - Create 4 partitions
	- boot :: Size 512MiB :: Code EF00
	- swap :: Size [varies] :: Code 8200
	- root :: Size [varies] :: Code 8300
	- home :: Size [varies] :: Code 8300
8 - Write changes, enter yes, then navigate to quit
9 - lsblk to confirm changes
10 - Format partitions
	- boot :: mkfs.fat -F32 /dev/[drivename]1
	- swap :: mkswap /dev/[drivename]2 :: swapon /dev/[drivename]2
	- root :: mkfs.ext4 /dev/[drivename]3
	- home :: mkfs.ext4 /dev/[drivename]4
11 - lsblk to confirm formatting
12 - Mount filesystems
	- root :: mount /dev/[drivename]3 /mnt
	- mkdir /mnt/boot
	- mkdir /mnt/boot/efi (for UEFI)
	- mkdir /mnt/home
	- boot :: mount /dev/[drivename]1 /mnt/boot OR /mnt/boot/efi (for UEFI)
	- home :: mount /dev/[drivename]4 /mnt/home
13 - Generate mirrorlist
	- cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
	- sudo pacman -Sy pacman-contrib (needed to access rankmirrors)
	- rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist
14 - Strap on your seatbelts!
	- pacstrap -K /mnt base base-devel linux linux-firmware grub efibootmgr
15 - Generate fstab
	- genfstab -U -p /mnt >> /mnt/etc/fstab
	- *optional* to view fstab and ensure correct generation :: nano /mnt/etc/fstab
16 - Chroot time!
	1 - arch-chroot /mnt
	2 - sudo pacman -Sy neovim bash-completion
	3 - Generate Locales
		- nvim /etc/locale.gen
		- Uncomment the lines :: en_US.UTF-8 UTF-8 :: en_US ISO-8859-1
		- locale-gen
		- echo LANG=en_US.UTF-8 > /etc/locale.conf
		- export LANG=en_US.UTF-8
	4 - Set up Time Zones
		- ln -sf /usr/share/zoneinfo/America/New_York > /etc/localtime
	5 - Sync HW clock
		- hwclock --systohc --utc
	6 - Generate Hostname
		- echo [desired_hostname] > /etc/hostname
	7 - For SSDs, enable TRIM support
		- systemctl enable fstrim.timer
	8 - Enable 32-bit support
		- nvim /etc/pacman.conf
		- Search multilib
		- Uncomment :: [multilib] :: Include = /etc/pacman.d/mirrorlist
		- sudo pacman -Sy to update packages, now including multilib
	9 - Create user account and set root/user passwords
		- passwd :: enter root password
		- useradd -m -g users -G wheel,storage,power -s /bin/bash [username]
		- passwd [username]
	10 - Edit sudo configuration
		- EDITOR=nvim visudo
		- Search %wheel
		- Remove comment from in front of :: %wheel ALL=(ALL:ALL)
		- At EOF add :: Defaults rootpw
	11 - Install bootloader
		1 - For systemd
			- mount -t efivarfs efivarfs /sys/firmware/efi/efivars/
			- bootctl install
		2 - For GRUB
			- mount -t efivarfs efivarfs /sys/firmware/efi/efivars/
			- grub-install /dev/[drivename]
			- sudo pacman -S intel-ucode
			- grub-mkconfig -o /boot/grub/grub.cfg
	12 - Initialize and install Network services
		- ip link
		- sudo pacman -S dhcpcd
		- sudo systemctl enable dhcpcd@[network].service
		- sudo pacman -S networkmanager
		- sudo systemctl enable NetworkManager.service
	13 - Install graphics drivers
		1 - For Nvidia
			- sudo pacman -S nvidia-dkms libglvnd nvidia-utils opencl-nvidia lib32-libglvnd lib32-nvidia-utils lib32-opencl-nvidia nvidia-settings
			- sudo nvim /etc/mkinitcpio.conf
			- Inside Modules=() :: nvidia nvidia_modeset nvidia_uvm nvidia_drm
			- Regenerate GRUB config :: grub-mkconfig -o /boot/grub/grub.cfg
		2 - For Intel integrated graphics
			- sudo pacman -S mesa lib32-mesa xf86-video-intel vulkan-intel lib32-vulkan-intel
			- Regenerate GRUB config :: grub-mkconfig -o /boot/grub/grub.cfg
	14 - Finish up
		- exit
		- umount -R /mnt
		- reboot

##### Arch is now installed! #####
